<section id="cart-drawer" style="display: none">
  <p id="empty-cart-message" class="tac" style="display: none">Your Cart is Empty</p>
  <div class="background-light-teal flex-container-no jcsb accent-padding">
    <a href="/cart">
      <img src="{{'bag.png' | asset_url}}" class="icon" id="go-to-cart" loading="lazy"/>
    </a>
    <h3 class="tac nm accent ttu text-white">Shopping Bag</h3>
    <img src="{{'exit.png' | asset_url}}" class="icon clickable" id="close-cart" onclick="cartClose();" loading="lazy">
  </div>
  <div class="accent-padding background-white">
  <p class="tac subscript text-dark-teal fw" id="free-2-day">Free Shipping on Orders over $80</p>

{% for item in cart.items %}
  <div id="variant-{{ item.id }}" class="cart-drawer-variant-contianer border-bottom-natural" data-product-id="{{ item.product_id }}" data-variant-id="{{ item.id }}">
      <div class="flex-container">

        <div class="quarter"> 
          <a href="{{ item.url}}">
            <img src="{{ item.variant.featured_image | product_img_url: 'large' }}"  alt="{{ item.product.title }}">
          </a>
        </div> 
        <div class="accent-padding fw half">
          <h4 class="ttu">{{ item.product.title }}</h4>

          {% if item.product.tags contains "wholesale" %}
            <p class="nm subscript text-red">Wholesale Item</p>
          {% endif %}
          {% if  item.selling_plan_allocation.selling_plan.selected == false %}
            <p class="nm subscript text-red">Subscription - {{ item.selling_plan_allocation.selling_plan.name }}</p>
          {% endif %}
          
          <div id="cart-drawer-qty">
            <form action="/cart" method="post" id="{{ item.variant.id }}-form" class="cart-drawer-qty-adjust-form">
            <button type="button" class="cart-drawer-qty-adjust qty-adjust-minus"><span class="icon clickable">-</span></button>
            <input type="text" size="4" id="updates_{{ item.id }}" name="updates[{{ item.id }}]" value="{{ item.quantity }}" class="tac cart-drawer-qty-num">
            {% comment %} <input type="submit" name="update" value="update" class="cart-update update-cart-quantity"> {% endcomment %}
            <button type="button" class="cart-drawer-qty-adjust qty-adjust-plus"><span class="icon clickable">+</span></button>
            </form>
          </div>
        

          <p><b>Style: </b>{{ item.variant.title }}</p>
          <p id="{{ item.variant.id }}-price">{{ item.line_price | divided_by: item.quantity | money }}</p>

        </div>

      </div>
  </div>
{% endfor %}
</div>
{% comment %} payment etc {% endcomment %}
<div class="accent-padding" style="background-color: #f7f5f2;">
  <button type="submit" class="add-to-cart btn btn--secondary btn--full cart__checkout btn clickable fw" name="checkout" style="margin-top: 0.5em; height: 54px">
    <h4 id="add-to-cart-btn-txt" class="ttu text-white nm">Checkout - {{ cart.total_price | money }}</h4>
  </button>

  {% if additional_checkout_buttons %}
    <p class="subscript tac fw">other payment options</p>
    <div class="additional-checkout-buttons additional-checkout-buttons--vertical">{{ content_for_additional_checkout_buttons }}</div>
  {% endif %}

  {% comment %} render sock gift box suggestion if there's a sock product in cart {% endcomment %}
  {%- liquid
    for item in cart.items 
      if item.product.title contains 'Gift Box'
        assign giftBoxInCart = true
        break
      else
        assign giftBoxInCart = false
      endif

      if item.product.title contains 'Socks'
        assign sockInCart = true 
        break
      else 
        assign sockInCart = false 
      endif 
     endfor 
  -%}

  {% if sockInCart == true and giftBoxInCart == false %}
    {% render 'gift-box-cart-drawer' %}
  {% endif %}


  {% comment %} {% render 'cart-drawer-bundle-logic' %} {% endcomment %}

</div>

</section>

<script>
  $(document).ready(function() {
    setInterval(function() {
      $('#free-2-day').toggleClass("text-dark-teal"); 
    }, 1000)

    {% comment %} add a class to all descendants of the cart drawer element {% endcomment %}
    $('#cart-drawer').find('*').addClass('cart-drawer-el')

  }); 

  $('#close-cart').click(function() {
    $('#cart-drawer').removeClass('slide-in').addClass('slide-out')

  })

  // close cart drawer when there's a click outside the container that is not the add to cart button
  $(document).click(function() {
    console.log($('#cart-drawer').css('display'))
    if (!$(event.target).parent('button').hasClass('add-to-cart') && !$(event.target).hasClass('cart-drawer-el') && $('#cart-drawer').css('display') !== 'none' ) {
      $('#cart-drawer').removeClass('slide-in').addClass('slide-out')
    }  
  })

</script>

{% comment %} adjust quantity {% endcomment %}
<script>
  function increaseItemQty(variant_id, qty) {
    data = {
      "id": variant_id,
      "quantity": qty,
    }
    jQuery.ajax({
      type: 'POST',
      url: '/cart/add.js',
      data: data,
      dataType: 'json',
      success: function() { 
        {% comment %} show updated qty num in input {% endcomment %}
        let qtyInput = document.getElementById(`updates_${variant_id}`)
        let qtyInputNum = parseInt(qtyInput.value) + 1
        qtyInput.value = qtyInputNum.toString()

        {% comment %} adjust total price {% endcomment %}
        let addToCartBtnText = document.getElementById('add-to-cart-btn-txt').innerText
        let variantPrice = parseInt(document.getElementById(`${variant_id}-price`).innerText.replace('$', ''))
        let updatedTotalPrice = parseInt(addToCartBtnText.replace('CHECKOUT - $', '').replace(',', '')) - variantPrice
        document.getElementById('add-to-cart-btn-txt').innerText = `CHECKOUT - ${new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(updatedTotalPrice)}`

      }
    });
  }

  function decreaseItemQty(variant_id, qty) {
    data = {
      "id": variant_id,
      "quantity": qty
    }
    jQuery.ajax({
      type: 'POST',
      url: '/cart/change.js',
      data: data,
      dataType: 'json',
      success: function() { 
        let qtyInput = document.getElementById(`updates_${variant_id}`)
        let qtyInputNum = parseInt(qtyInput.value) - 1
        qtyInput.value = qtyInputNum.toString()

        {% comment %} adjust total price {% endcomment %}
        let addToCartBtnText = document.getElementById('add-to-cart-btn-txt').innerText
        let variantPrice = parseInt(document.getElementById(`${variant_id}-price`).innerText.replace('$', ''))
        let updatedTotalPrice = parseInt(addToCartBtnText.replace('CHECKOUT - $', '').replace(',', '')) + variantPrice
        document.getElementById('add-to-cart-btn-txt').innerText = `CHECKOUT - ${new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(updatedTotalPrice)}` 

        {% comment %} hide the variant if its quantity becomes zero {% endcomment %}
        if (qty == 0) {
          document.getElementById(`variant-${variant_id}`).remove()

          {% comment %} if there are now 0 items in cart, hide all cart details, change drawer background color and show cart is empty message {% endcomment %}
          if (document.querySelectorAll('.cart-drawer-variant-contianer').length == 0) {
            let cartDrawerChildElements = document.getElementById('cart-drawer').children

            document.getElementById('cart-drawer').style.backgroundColor = '#f7f5f1'
              cartDrawerChildElements.forEach(function(el, idx) {
              el.style.display = 'none'
          })
            document.getElementById('empty-cart-message').style.display = 'block'
          } 
        }
      }
    });
  }

  {% comment %} adjust item quantity on plus and minus button click  {% endcomment %}
  $('.cart-drawer-qty-adjust').click(function() {
    var variantId = parseInt($(this).parent('form').attr('id').replace('-form', ''))
    if ($(this).hasClass('qty-adjust-plus')) {
      increaseItemQty(variantId, 1)
    } else if ($(this).hasClass('qty-adjust-minus')) {
      let itemQty = parseInt($(this).siblings('.cart-drawer-qty-num').val()) - 1
    decreaseItemQty(variantId, itemQty) 
    }
  })


  </script>

<style>
  #cart-drawer {
    position: fixed;
    width: 50vw;
    height: 100vh;
    overflow-x: hidden;
    overflow-y: scroll;
    min-width: 320px;
    max-width: 800px;
    z-index: 9999;
    right: 0;
    top: 0;
    box-shadow: 0 9px 0px 0px white, 0 -9px 0px 0px white, 12px 0 15px -4px grey, -12px 0 15px -4px grey;
  }

  #cart-drawer-qty {
    border: 1px solid lightgray;
    border-radius: 20px;
    width: fit-content;
    padding: 0 10px;
  }

  .cart-drawer-qty-num {
    height: 25px;
    width: 15px;
    border: none;
  }

  .cart-drawer-qty-adjust {
    border: none;
    background: transparent;
  }
  
  .border-bottom-natural:last-of-type { border-bottom: none }

  #add-gift-box-to-cart {
    border-radius: 10px;
    margin-top: 10px;
  }
  #add-gift-box-to-cart h4 {
    font-weight: normal; 
    padding: 5px;
  }
  
  @media only screen and (min-width: 800px) {
    .close-gift-box-modal {
      position: absolute;
      right: 20pt;
      top: 20pt;
      font-size: 20pt;
    }
    #add-gift-box-to-cart h4 { font-size: 16pt;}
    #gift-box-details {
      margin: 0; 
      padding-left: 1.5vw;
    }
  }
  @media only screen and (max-width: 799px) {
    .close-gift-box-modal {
      position: absolute;
      right: 10pt;
      top: 10pt;
      font-size: 10pt;
    }
   #add-gift-box-to-cart h4 { font-size: 12pt;}
    #gift-box-details {
      margin: 0; 
      padding-left: 15pt;
    }
  }
  #gift-box-modal {
    z-index: 999;
    width: 85%;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) !important;
    border: 1px solid #2d2b26;
    box-shadow: 2px 5px 5px #2d2b267d;
    border-radius: 20px;
  }
  #gift-box-callout { 
    border-bottom: 1px solid #2d2b26; 
    font-weight: inherit
  }
  #gift-box-info {
    baseline-shift: super;
    vertical-align: super;
    font-size: 8pt;
    background-color: #66cad8;
    border-radius: 100%;
    width: 13px;
    height: 13px;
    display: inline-block;
    text-align: center;
    color: white;
  }
</style>