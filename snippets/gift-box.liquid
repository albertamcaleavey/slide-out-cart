{% comment %}
This snipped is included on product-form-new.liquid.
It includes all of the html, css, and js needed for the gift box add-on.
{% endcomment %}
  {% for product in collections.all.products %}
    {% if product.id == 7082898653284 %}
      {%  assign gift_box = product %}
    {%  endif  %}
  {%  endfor %}
  {%  if gift_box.available %}
<!--   gift check box -->
  <div style="margin: 15px 0;">
    <input type="checkbox" id="product-gift-box" name="product-gift-box">
    <label for="product-gift-box">Add a <span class="clickable" id="gift-box-callout" >Gift Box</span> for $5.00</label><div id="gift-box-info" class="clickable">i</div>
    <p class="nm subscript text-teal" id="add-or-remove-gift-box" style="display: none;margin-left: 25px;">Gift box added</p>
  </div>
  
<!--   gift box modal -->
  <div class="flex-container background-white double-accent-padding" id="gift-box-modal" style="display: none; z-index: 99999">
    <div class="close-gift-box-modal clickable">✕</div>
    <div class="half">
      <img src="{{ 'box2_EDITED.jpg' | asset_url }}" />
    </div>
    <div class="half accent-padding">
      <p><b>Customize your gift with our specialty sock box.</b></p>
      <p class="nm">Details: </p>

        <ul id="gift-box-details" style="">
          <li>Accommodates 4 or 5 women’s crew socks, 4 men’s crew socks or 6 kids' crew socks</li>
          <li>Box base and sleeve are shipped flat and designed to be assembled</li>
          <li>Final sale item and is not able to be returned</li>
          <li>Socks sold separately</li>

        </ul>
        
    </div>
  </div>

<!-- css specific to gift boxes -->
  <style>
    @media only screen and (min-width: 800px) {
      .close-gift-box-modal {
        position: absolute;
        right: 20pt;
        top: 20pt;
        font-size: 20pt;
      }
      #gift-box-details {
        margin: 0; 
        padding-left: 1.5vw;
      }
    }
    @media only screen and (max-width: 799px) {
      .close-gift-box-modal {
        position: absolute;
        right: 10pt;
        top: 10pt;
        font-size: 10pt;
      }
      #gift-box-details {
        margin: 0; 
        padding-left: 15pt;
      }
    }
    #gift-box-modal {
      z-index: 999;
      width: 85%;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) !important;
      border: 1px solid #2d2b26;
      box-shadow: 2px 5px 5px #2d2b267d;
      border-radius: 20px;
    }
    #gift-box-callout { 
      border-bottom: 1px solid #2d2b26; 
      font-weight: inherit
    }
    #gift-box-info {
      margin-left: 5px;
      baseline-shift: super;
      vertical-align: super;
      font-size: 8pt;
      background-color: #66cad8;
      border-radius: 100%;
      width: 13px;
      height: 13px;
      display: inline-block;
      text-align: center;
      color: white;
    }
  </style>

  <script>
    var  currentBoxCount = 0;

    {%  for item in cart.items %}
    {%  if item.title contains "Sock Gift Box" %}
      currentBoxCount = {{item.quantity}}
    {%  endif %}
    {%  endfor %}
    // show and hide gift box modal
      $('.close-gift-box-modal').click(function() {
        $('#gift-box-modal').hide(); 
      })
      $('#gift-box-info, #gift-box-callout').on("click", function() {
        // unless event.preventDefault is included clicked on the underlined "Gift Box" 
        // will check the input and not open the modal
        event.preventDefault(); 
        $('#gift-box-modal').show(); 
        ga("send", "event", "GiftBox", "PDP", "Show Info");

      })

    // yet another add item function and remove item function, 
    // should be refactored across the theme and consolidated in custom.jquery.js
    function removeItems(items, quantity) {
      var itemsArray = items
      var qty = quantity;
      var data = { updates: {} };
      
      for (i = 0; i < itemsArray.length; i++) {
         data.updates[itemsArray[i]] = qty;
      }
      jQuery.ajax({
        type: 'POST',
        url: '/cart/update.js',
        data: data,
        dataType: 'json',
        success: function() { 
          // if on the cart page, refresh the products
          // else show "added or removed feedback"
            $('#add-or-remove-gift-box').text('Gift box removed').show(); 
        }
      });
    }
    Shopify.addItem = function(variant_id, quantity, callback) {
      var quantity = quantity || 1;
      var params = {
        type: 'POST',
        url: '/cart/add.js',
        data: 'quantity=' + quantity + '&id=' + variant_id,
        dataType: 'json',
        success: function() { 
          // if on the cart page, refresh the products
          // else show "added or removed feedback"     
          $('#add-or-remove-gift-box').text('Gift box added').show();             
        },
        error: function(XMLHttpRequest, textStatus) {
          Shopify.onError(XMLHttpRequest, textStatus);
        }
      };
      jQuery.ajax(params);
    };                                                                                                                                                                                  
    
    // when the gift box form is changed
    // if it's checked, add gift box else remove gift box
    // used functions defined directly above
    $('#product-gift-box').change(function() {
      if ($('#product-gift-box').is(':checked')) {
        Shopify.addItem(41214212341860, 1)  
        ga("send", "event", "GiftBox", "PDP", "Add to Cart");

      }    
      else {
        removeItems([41214212341860], currentBoxCount)  
      }
   })
 </script>
{%  endif %}
    